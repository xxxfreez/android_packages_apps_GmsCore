/*
 * SPDX-FileCopyrightText: 2013, microG Project Team
 * SPDX-License-Identifier: Apache-2.0
 */

buildscript {
    ext.nlpVersion = '2.0-alpha4'
    ext.remoteDroidGuardVersion = '0.1.2'
    ext.safeParcelVersion = '1.6.0'
    ext.wearableVersion = '0.1.1'
    ext.kotlinVersion = '1.4.0-RC'
    ext.coroutineVersion = '1.4.0-M1'
    ext.annotationVersion = '1.2.0-alpha01'
    ext.appcompatVersion = '1.3.0-alpha02'
    ext.coreVersion = '1.5.0-alpha04'
    ext.fragmentVersion = '1.3.0-beta01'
    ext.lifecycleVersion = '2.3.0-beta01'
    ext.mediarouterVersion = '1.2.0'
    ext.multidexVersion = '2.0.1'
    ext.navigationVersion = '2.3.1'
    ext.preferenceVersion = '1.1.1'
    ext.recyclerviewVersion = '1.2.0-alpha06'
    ext.supportLibraryVersion = '28.0.0'
    ext.slf4jVersion = '2.0.0-alpha1'
    ext.volleyVersion = '1.1.1'
    ext.wireVersion = '3.4.0'
    ext.androidBuildGradleVersion = '4.1.0'
    ext.androidBuildVersionTools = '30.0.2'
    ext.androidMinSdk = 14
    ext.androidTargetSdk = 29
    ext.androidCompileSdk = 30


    repositories {
        jcenter()
        google()
        mavenCentral()
        maven {
            url "https://maven.springframework.org/release"
        }
        maven {
            url "https://maven.restlet.com"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.20-RC'
        classpath 'com.squareup.wire:wire-gradle-plugin:3.4.0'
    }
}

def execResult(...args) {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine args
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def gmsVersion = "20.39.15"
def gmsVersionCode = Integer.parseInt(gmsVersion.replaceAll('\\.', ''))
def gitVersionBase = execResult('git', 'describe', '--tags', '--abbrev=0', '--match=v[0-9]*').substring(1)
def gitCommitCount = Integer.parseInt(execResult('git', 'rev-list', '--count', "v$gitVersionBase..HEAD"))
def gitCommitId = execResult('git', 'show-ref', '--abbrev=7', '--head', 'HEAD').split(' ')[0]
def gitDirty = execResult('git', 'status', '--porcelain').size() > 0
def ourVersionBase = gitVersionBase.substring(0, gitVersionBase.lastIndexOf('.'))
def ourVersionMinor = Integer.parseInt(ourVersionBase.substring(ourVersionBase.lastIndexOf('.') + 1))
def ourVersionCode = gmsVersionCode * 1000 + ourVersionMinor * 2  + (gitCommitCount > 0 || gitDirty ? 1 : 0)
def ourVersionName = "$ourVersionBase.$gmsVersionCode" + (gitCommitCount > 0 && !gitDirty ? "-$gitCommitCount" : "") + (gitDirty ? "-dirty" : "") + (gitCommitCount > 0 && !gitDirty ? " ($gitCommitId)" : "")
logger.lifecycle('Starting build for version {} ({})...', ourVersionName, ourVersionCode)

@Deprecated
String getMyVersionName() {
    return ourVersionName
}

@Deprecated
int getMyVersionCode() {
    return ourVersionCode
}


allprojects {
    repositories {
        maven {
            url 'https://api.mapbox.com/downloads/v2/releases/maven'
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                // Do not change the username below.
                // This should always be `mapbox` (not your username).
                username = 'mapbox'
                // Use the secret token you stored in gradle.properties as the password
                password = project.properties['MAPBOX_DOWNLOADS_TOKEN'] ?: "sk.eyJ1IjoieHh4ZnJlZXoiLCJhIjoiY2tnM2tvdHVuMGJwNzJ4cGFoY3RkdjA1YyJ9.z8KrVfCyrKgeH6Sx3kFY4Q"
            }
        }
    }

    apply plugin: 'idea'

    group = 'org.microg.gms'
    version = ourVersionName
    ext.appVersionCode = ourVersionCode
    ext.isReleaseVersion = false
}

@Deprecated
def androidCompileSdk() { return androidCompileSdk }

@Deprecated
def androidTargetSdk() { return androidTargetSdk }

@Deprecated
def androidMinSdk() { return androidMinSdk }

@Deprecated
def versionCode() {
    return ourVersionCode
}

@Deprecated
def versionName() {
    return ourVersionName
}

subprojects {
    repositories {
        jcenter()
        google()
        mavenCentral()
        maven {
            url "https://maven.springframework.org/release"
        }
        maven {
            url "https://maven.restlet.com"
        }
    }
}

